plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'dev.flutter.flutter-gradle-plugin'

}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode', '1').toInteger()
def flutterVersionName = localProperties.getProperty('flutter.versionName', '1.0')

// ✅ Explicit Kotlin version
ext.kotlin_version = '1.9.22'

android {
    namespace "com.example.donix"
    compileSdkVersion 35  // ✅ Set compileSdkVersion explicitly

    defaultConfig {
        applicationId "com.example.donix"
        minSdkVersion 23  // ✅ Minimum supported SDK
        targetSdkVersion 35  // ✅ Target latest stable SDK
        versionCode flutterVersionCode
        versionName flutterVersionName
        multiDexEnabled true  // ✅ Enable MultiDex for large apps
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }

    kotlinOptions {
        jvmTarget = '17'
    }

    buildTypes {
        release {
            signingConfig signingConfigs.debug  // ✅ Change for release signing if needed
            minifyEnabled false  // ✅ Keep false unless optimizing APK size
            shrinkResources false  // ✅ Keep false unless optimizing APK size
        }
    }
}

flutter {
    source '../..'
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation "androidx.multidex:multidex:2.0.1"  // ✅ Fixes MultiDex issues
    implementation 'com.google.android.gms:play-services-maps:19.1.0'


}
